(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{363:function(a,t,r){"use strict";r.r(t);var s=r(45),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"基本功"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本功"}},[a._v("#")]),a._v(" 基本功")]),a._v(" "),r("h2",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[a._v("#")]),a._v(" "),r("font",{attrs:{color:"#EAAE0F"}},[a._v("数据结构")])],1),a._v(" "),r("h3",{attrs:{id:"堆-heap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap"}},[a._v("#")]),a._v(" 堆 Heap")]),a._v(" "),r("h3",{attrs:{id:"栈-stack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[a._v("#")]),a._v(" 栈 Stack")]),a._v(" "),r("h3",{attrs:{id:"队列-queue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[a._v("#")]),a._v(" 队列 Queue")]),a._v(" "),r("h3",{attrs:{id:"链表-linked-list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表-linked-list"}},[a._v("#")]),a._v(" 链表 Linked List")]),a._v(" "),r("h3",{attrs:{id:"数组-array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组-array"}},[a._v("#")]),a._v(" 数组 Array")]),a._v(" "),r("h3",{attrs:{id:"哈希表-hash-table"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希表-hash-table"}},[a._v("#")]),a._v(" 哈希表 Hash Table")]),a._v(" "),r("h3",{attrs:{id:"二叉树-binary-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树-binary-tree"}},[a._v("#")]),a._v(" 二叉树 Binary Tree")]),a._v(" "),r("h3",{attrs:{id:"并查集-union-find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并查集-union-find"}},[a._v("#")]),a._v(" 并查集 Union Find")]),a._v(" "),r("h3",{attrs:{id:"字典树-trie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字典树-trie"}},[a._v("#")]),a._v(" 字典树 Trie")]),a._v(" "),r("h2",{attrs:{id:"算法逻辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法逻辑"}},[a._v("#")]),a._v(" "),r("font",{attrs:{color:"#EAAE0F"}},[a._v("算法逻辑 ")])],1),a._v(" "),r("h3",{attrs:{id:"递归-recursion"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归-recursion"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"/algorithm/recursion"}},[a._v("递归 Recursion")])]),a._v(" "),r("h3",{attrs:{id:"二分-binary-search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二分-binary-search"}},[a._v("#")]),a._v(" 二分 Binary Search")]),a._v(" "),r("h3",{attrs:{id:"分治-divide-conquer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分治-divide-conquer"}},[a._v("#")]),a._v(" 分治 Divide Conquer")]),a._v(" "),r("h3",{attrs:{id:"快排-quick-sort"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#快排-quick-sort"}},[a._v("#")]),a._v(" 快排 Quick Sort")]),a._v(" "),r("h3",{attrs:{id:"动态规划-dynamic-programming"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划-dynamic-programming"}},[a._v("#")]),a._v(" 动态规划 Dynamic Programming")]),a._v(" "),r("h3",{attrs:{id:"回溯法-backtracking"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回溯法-backtracking"}},[a._v("#")]),a._v(" 回溯法 Backtracking")]),a._v(" "),r("h3",{attrs:{id:"双指针-two-pointers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双指针-two-pointers"}},[a._v("#")]),a._v(" 双指针 Two Pointers")]),a._v(" "),r("h3",{attrs:{id:"扫描线-scan-line-algorithm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扫描线-scan-line-algorithm"}},[a._v("#")]),a._v(" 扫描线 Scan-line algorithm")]),a._v(" "),r("h3",{attrs:{id:"广度优先搜索-breadth-first-search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#广度优先搜索-breadth-first-search"}},[a._v("#")]),a._v(" 广度优先搜索 Breadth First Search")]),a._v(" "),r("h3",{attrs:{id:"深度优先搜索-depth-first-search"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#深度优先搜索-depth-first-search"}},[a._v("#")]),a._v(" 深度优先搜索 Depth First Search")])])}),[],!1,null,null,null);t.default=e.exports}}]);